{
  "editor.quickSuggestions": { "strings": false },  // reduces Tailwind churn in class=""

  // --- Python (Pyright) memory dial-down ---
  //"python.languageServer": "Pylance",
  //"python.analysis.indexing": false,

  // --- General ---

  // ────────── Python Environment ──────────
  "python.defaultInterpreterPath": "${workspaceFolder}/.venv/Scripts/python.exe",
  "python.envFile": "${workspaceFolder}/.env",
  "python.terminal.shellIntegration.enabled": true,

  // Terminal Integration
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.suggest.enabled": true,
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.environmentChangesRelaunch": true,
  "terminal.integrated.enableFileLinks": "notRemote",

  "terminal.integrated.env.linux": {
    "PYTHONPATH": "${workspaceFolder}"
  },
  "terminal.integrated.env.osx": {
    "PYTHONPATH": "${workspaceFolder}"
  },
  "terminal.integrated.env.windows": {
    "PYTHONPATH": "${workspaceFolder}"
  },

  // ────────── Python Analysis & Type Checking ──────────
  "python.analysis.extraPaths": ["${workspaceFolder}"],
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.diagnosticMode": "openFilesOnly",
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.inlayHints.variableTypes": true,
  "python.autoComplete.extraPaths": ["${workspaceFolder}"],

  // ────────── Python Testing ──────────
  "python.testing.pytestEnabled": true,
  "python.testing.pytestArgs": ["tests", "-v", "--tb=short"],
  "python.testing.unittestEnabled": false,
  "python.testing.autoTestDiscoverOnSaveEnabled": false,

  // ────────── Editor Formatting ──────────
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.organizeImports.ruff": "explicit",
    "source.fixAll.ruff": "explicit",
    "source.fixAll.eslint": "explicit"
  },

  // Language-specific formatters
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports.ruff": "explicit",
      "source.fixAll.ruff": "explicit"
    }
  },

  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "on"
  },
  "chat.mcp.discovery.enabled": {
    "claude-desktop": true
  },
  "chat.mcp.access": "all",
  "chat.mcp.autostart": "newAndOutdated",
  "chat.mcp.assisted.nuget.enabled": true,

  // ────────── Additional Settings ──────────
  "editor.rulers": [256],
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,

  // ────────── File & Search Exclusions ──────────
  "files.exclude": {
    "**/__pycache__": true,
    "**/.venv": true,
    "**/node_modules": true,
    "**/.pytest_cache": true,
    "**/*.pyc": true,
    "**/.ruff_cache": true,
    "**/*.o": true,
    "**/*.obj": true,
    "**/x64/**": true,
    "**/Debug/**": true,
    "**/Release/**": true,
    "**/*.pdb": true,
    "**/*.idb": true,
    "**/*.lib": true,
    "**/*.exp": true,
    "**/*.ilk": true,
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/.venv": true,
    "**/__pycache__": true,
    "**/.pytest_cache": true,
    "**/.ruff_cache": true,
    "**/*.o": true,
    "**/*.obj": true,
    "**/x64/**": true,
    "**/Debug/**": true,
    "**/Release/**": true,
    "**/*.pdb": true,
    "**/*.idb": true,
    "**/*.lib": true,
    "**/*.exp": true,
    "**/*.ilk": true,
  },

  // --- Kill noisy watchers ---
  "files.watcherExclude": {
    "**/node_modules/**": true,
    "**/.git/**": true,
    "**/.venv/**": true,
    "**/__pycache__/**": true,
    "**/dist/**": true,
    "**/build/**": true,
    "**/.mypy_cache/**": true,
    "**/.ruff_cache/**": true,
    "**/data/**": true,
    "**/*.o": true,
    "**/*.obj": true,
    "**/x64/**": true,
    "**/Debug/**": true,
    "**/Release/**": true,
    "**/*.pdb": true,
    "**/*.idb": true,
    "**/*.lib": true,
    "**/*.exp": true,
    "**/*.ilk": true,
  },

  // ────────── Workspace-specific ──────────
  // ────────── C/C++ Configuration ──────────
  "C_Cpp.default.intelliSenseMode": "windows-msvc-x64",
  "C_Cpp.default.compilerPath": "",
  "C_Cpp.default.cStandard": "c11",
  "C_Cpp.default.cppStandard": "c++17",
  "C_Cpp.default.includePath": [
    "${workspaceFolder}/dll-hook/**",
    "${vcpkgRoot}/x64-windows/include"
  ],
  "C_Cpp.default.defines": [
    "_DEBUG",
    "UNICODE",
    "_UNICODE",
    "WIN32",
    "_WIN32",
    "_WINDOWS",
    "_USRDLL",
    "_CRT_SECURE_NO_WARNINGS"
  ],
  "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
  "C_Cpp.default.browse.path": [
    "${workspaceFolder}/dll-hook/**"
  ],
  "C_Cpp.errorSquiggles": "enabled",
  "C_Cpp.inlayHints.autoDeclarationTypes.enabled": true,
  "C_Cpp.inlayHints.parameterNames.enabled": true,
  "C_Cpp.formatting": "vcFormat",
  "C_Cpp.vcFormat.newLine.beforeOpenBrace.block": "sameLine",
  "C_Cpp.vcFormat.newLine.beforeOpenBrace.function": "sameLine",
  "C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis": "remove",

  // Language-specific C++ formatting
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools",
    "editor.formatOnSave": true,
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },
  "[c]": {
    "editor.defaultFormatter": "ms-vscode.cpptools",
    "editor.formatOnSave": true,
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },

  "github.copilot.enable": {
    "plaintext": true,
    "markdown": true,
    "scminput": true,
    "python": true,
    "javascript": true,
    "typescript": true,
    "html": true,
    "css": true,
    "json": true,
    "c++": true,
    "c": true,
    "cpp": true,
    "java": true,
  },

  "prettier.enable": false,         // let formatter run on-save via CLI task if needed

  // ────────── Ruff (All-in-One: Linting, Formatting, Import Sorting) ──────────
  "ruff.configurationPreference": "filesystemFirst",
  "ruff.lineLength": 256,
  "ruff.importStrategy": "useBundled",
  "ruff.enable": true,
  "ruff.organizeImports": true,
  "ruff.fixAll": true,
  "chat.mcp.serverSampling": {
    "UpadtedMethod/.vscode/mcp.json: context7": {
      "allowedModels": [
        "copilot/gpt-4.1",
        "copilot/auto",
        "copilot/claude-opus-4",
        "copilot/claude-opus-41",
        "copilot/claude-3.5-sonnet",
        "copilot/claude-3.7-sonnet",
        "copilot/claude-3.7-sonnet-thought",
        "copilot/claude-sonnet-4",
        "copilot/gemini-2.0-flash-001",
        "copilot/gemini-2.5-pro",
        "copilot/gpt-4o",
        "copilot/gpt-5",
        "copilot/gpt-5-mini",
        "copilot/grok-code-fast-1",
        "copilot/o3",
        "copilot/o3-mini",
        "copilot/o4-mini"
      ]
    },
    "UpadtedMethod/.vscode/mcp.json: playwright": {
      "allowedModels": [
        "copilot/gpt-4.1",
        "copilot/auto",
        "copilot/claude-opus-4",
        "copilot/claude-opus-41",
        "copilot/claude-3.5-sonnet",
        "copilot/claude-3.7-sonnet",
        "copilot/claude-3.7-sonnet-thought",
        "copilot/claude-sonnet-4",
        "copilot/gemini-2.0-flash-001",
        "copilot/gemini-2.5-pro",
        "copilot/gpt-4o",
        "copilot/gpt-5",
        "copilot/gpt-5-mini",
        "copilot/grok-code-fast-1",
        "copilot/o3",
        "copilot/o3-mini",
        "copilot/o4-mini"
      ]
    }
  },

}
